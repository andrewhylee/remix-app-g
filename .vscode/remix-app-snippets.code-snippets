{
  // Place your remix-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to console": {
    "scope": "javascript,typescript",
    "prefix": "log",
    "body": ["console.log('$1');", "$2"],
    "description": "Log output to console"
  },
  "New React Functional Component": {
    "prefix": ["new-component"],
    "body": [
      "import React from 'react'",
      "",
      "type ${TM_FILENAME_BASE/(.*)\\..+$/$1/}Props = {",
      "  className?: string | undefined",
      "  };",
      "",
      "export const ${TM_FILENAME_BASE/(.*)\\..+$/$1/}: React.FC<${TM_FILENAME_BASE/(.*)\\..+$/$1/}Props> = ({ className = '' }) => {",
      "  return <div className={'${TM_FILENAME_BASE/(.*)\\..+$/$1/} ' + className}>${TM_FILENAME_BASE/(.*)\\..+$/$1/}</div>",
      "}",
      ""
    ],
    "description": "Starting New React Functional  Component"
  }
}
